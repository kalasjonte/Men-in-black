/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib.grupp2;

import Klasser.Agent;
import Klasser.Alien;
import static Klasser.Alien.getDb;
import Klasser.Validering;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Jonathan Gabrielsson, Vilma Ottner, Josef Jamai-Haitot (Hädanefter
 * reffereras vi som grupp 2)
 * @Version 7 Januari 2021
 */
public class Huvudfonster extends javax.swing.JFrame {

    private ButtonGroup knappGrupp;
    private ArrayList<HashMap<String, String>> aliens;
    private ArrayList<HashMap<String, String>> agents;
    public static Agent agent;
    public static Alien alien;

    /**
     * Skapar ett nytt fönster för inlogg, och kör metoden fixaKnappar. 
     */
    public Huvudfonster() {
        initComponents();
        fixaKnappar();

    }

    private boolean validera(String string1, String string2) {
        if (Validering.validPassword(string1) && Validering.isID(string2)) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextInputID = new javax.swing.JTextField();
        jButtonAlien = new javax.swing.JRadioButton();
        jButtonAgent = new javax.swing.JRadioButton();
        jButtonLogin = new javax.swing.JButton();
        jLabelValkomsttext = new javax.swing.JLabel();
        jPasswordInput = new javax.swing.JTextField();
        jLblInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextInputID.setText("ID");
        jTextInputID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextInputIDActionPerformed(evt);
            }
        });

        jButtonAlien.setText("Alien");
        jButtonAlien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlienActionPerformed(evt);
            }
        });

        jButtonAgent.setText("Agent");
        jButtonAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgentActionPerformed(evt);
            }
        });

        jButtonLogin.setText("Login");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jLabelValkomsttext.setText("Välkommen till MIB skandinavien");

        jPasswordInput.setText("Lösenord");
        jPasswordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordInputActionPerformed(evt);
            }
        });

        jLblInfo.setText("Tänk på att skriva ID och lösenord exakt som det är i databsen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButtonAlien, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jButtonAgent, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabelValkomsttext))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextInputID)
                            .addComponent(jPasswordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                        .addGap(73, 73, 73)
                        .addComponent(jButtonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 79, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLblInfo)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabelValkomsttext, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLblInfo)
                .addGap(37, 37, 37)
                .addComponent(jTextInputID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLogin)
                    .addComponent(jPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAlien)
                    .addComponent(jButtonAgent))
                .addGap(0, 87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextInputIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextInputIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextInputIDActionPerformed

    /**
     * private då den endast ska nås inom detta klass / fönster
     *
     * @param klick från användaren på knappen "logga in"
     * @return void Syfte: Kolla vilken typ av inlogg (Alien/Agent(Admin eller
     * ej)) sedan starta ett fönster beroende på svaret därifrån Rapportera fel
     * till användaren om ID / lösenord / ej ifyllt fel
     *
     *
     *
     *
     */
    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        if (validera(jPasswordInput.getText(), jTextInputID.getText())) {
            try {
                if (jButtonAlien.isSelected()) {
                    aliens = getDb().fetchRows("Select * from ALIEN where ALIEN_ID =" + jTextInputID.getText());
                    if (aliens.size() > 0) {

                        //Tanken först att man loggar in med namn därav loopen om det fanns flera namn, men fungerar likadant för ID även om man bara får en i listan.
                        //Loopar listan och sparar objektet i listans lösenord i en string och jämnför med vad användaren skrivit in
                        //Stämmer det skapar vi en ny instans av en alien på dess ID och öppnar aliens första sida, samt stänger  inlogg sidan
                        //Annars felmedelande
                        HashMap<String, String> temp = new HashMap<>();
                        for (int index = 0; index < aliens.size(); index++) {
                            temp = aliens.get(index);
                            String losen;
                            losen = temp.get("LOSENORD");
                            String pass;
                            pass = jPasswordInput.getText();

                            if (losen.equals(pass)) {

                                this.alien = new Alien(jTextInputID.getText());
                                AlienStartPage alienPage = new AlienStartPage();
                                alienPage.setVisible(true);
                                dispose();
                                break;
                            } else {
                                JOptionPane.showMessageDialog(null, "Felaktigt lösenord");
                            }
                        }

                    }

                } else if (jButtonAgent.isSelected()) {

                    agents = getDb().fetchRows("Select * from AGENT where Agent_ID =" + jTextInputID.getText());
                    if (agents.size() > 0) {

                        HashMap<String, String> temp = new HashMap<>();
                        for (int index = 0; index < agents.size(); index++) {
                            temp = agents.get(index);
                            String losen;
                            losen = temp.get("LOSENORD");
                            String pass;
                            pass = jPasswordInput.getText();

                            if (losen.equals(pass)) {

                                this.agent = new Agent(jTextInputID.getText());
                                //Kollar om aagenten är administartör eller ej, öppnar beronde på svaren ett fönster till Agent eller Admin
                                if ("J".equals(getDb().fetchSingle("Select ADMINISTRATOR from AGENT where AGENT_ID =" + jTextInputID.getText() + ";".toUpperCase()))) {
                                    AdminFirstPage adminPage = new AdminFirstPage();
                                    adminPage.setVisible(true);

                                    break;
                                } else if ("N".equals(getDb().fetchSingle("Select ADMINISTRATOR from AGENT where AGENT_ID =" + jTextInputID.getText() + ";".toUpperCase()))) {
                                    this.agent = new Agent(jTextInputID.getText());
                                    AgentFirstPage agentPage = new AgentFirstPage();
                                    agentPage.setVisible(true);
                                    dispose();
                                    break;
                                }
                            } else if (!losen.equals(pass)) {
                                JOptionPane.showMessageDialog(null, "Felaktigt lösenord");
                            }
                        }

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Vänligen välj Agent eller Alien som inlogg");
                }

            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Kan ej hitta ID:et i databasen");

            } catch (InfException e) {
                System.out.println(e);
            }
        }


    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jButtonAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgentActionPerformed

    }//GEN-LAST:event_jButtonAgentActionPerformed

    private void jButtonAlienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlienActionPerformed

    }//GEN-LAST:event_jButtonAlienActionPerformed

    private void jPasswordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordInputActionPerformed

    //Metod som lägger in radioknapparna i en grupp, vlket gör att bara en kan bli vald åt gången
    //Inga parametrar och returnar void
    private void fixaKnappar() {
        knappGrupp = new ButtonGroup();
        knappGrupp.add(jButtonAlien);
        knappGrupp.add(jButtonAgent);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Huvudfonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Huvudfonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Huvudfonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Huvudfonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Huvudfonster().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton jButtonAgent;
    private javax.swing.JRadioButton jButtonAlien;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JLabel jLabelValkomsttext;
    private javax.swing.JLabel jLblInfo;
    private javax.swing.JTextField jPasswordInput;
    private javax.swing.JTextField jTextInputID;
    // End of variables declaration//GEN-END:variables
}
